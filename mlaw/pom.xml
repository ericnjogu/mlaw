<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright 2012 Protosoft Ltd -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.martinlaw</groupId>
	<artifactId>mlaw</artifactId>
	<packaging>war</packaging>
	<name>mlaw</name>
	<version>0.1</version>

	<properties>
		<rice.version>2.3.2</rice.version>
		<spring.version>3.2.3.RELEASE</spring.version><!-- 3.1.0.RELEASE -->
		<project.organization.name>Eric Njogu (kunadawa@gmail.com)</project.organization.name>
		<project.name>mLaw</project.name>
		<project.inceptionYear>2012</project.inceptionYear>
		<maven.test.search.classdir>true</maven.test.search.classdir>
		<gmaven.stubs.phase>generate-resources</gmaven.stubs.phase>
		<gmaven.compile.phase>compile</gmaven.compile.phase>
		<gmaven.test.compile.phase>test-compile</gmaven.test.compile.phase>
		<groovy.version>1.8.5</groovy.version>
		<spring.security.version>3.1.4.RELEASE</spring.security.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>8.1.4.v20120524</version>
				<configuration>
					<!-- disabled until the following error can be resolved java.lang.ClassNotFoundException: 
						org.ow2.carol.jndi.spi.MultiOrbInitialContextFactory -->
					<!-- <scanIntervalSeconds>5</scanIntervalSeconds> -->
					<webApp>
						<contextPath>/mlaw</contextPath>
					</webApp>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.7.2</version>
				<configuration>
					<excludes>
						<exclude>**/OrmTest.java</exclude>
						<exclude>**/KimLdapTest.java</exclude>
						<!-- excluded till we can figure out why kim.mode and kew.mode becomes 
							null and causes many other tests to fail -->
						<!-- might be because they query kim api service locator -->
						<exclude>**/OpenidUserDetailsServiceTest.java</exclude>
						<exclude>**/OpenidActivationCRUDTest.java</exclude>
						<exclude>**/OpenIDSuccessAuthenticationSuccessHandlerTest.java</exclude>
					</excludes>
					<argLine>-XX:MaxPermSize=512m</argLine>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>gmaven-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<providerSelection>1.8</providerSelection>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.codehaus.gmaven.runtime</groupId>
						<artifactId>gmaven-runtime-1.8</artifactId>
						<version>1.4</version>
						<exclusions>
							<exclusion>
								<groupId>org.codehaus.groovy</groupId>
								<artifactId>groovy-all</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
					<dependency>
						<groupId>org.codehaus.groovy</groupId>
						<artifactId>groovy-all</artifactId>
						<version>${groovy.version}</version>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>gmaven-generate-stubs</id>
						<phase>${gmaven.stubs.phase}</phase>
						<goals>
							<goal>generateStubs</goal>
						</goals>
					</execution>
					<execution>
						<id>gmaven-compile-stubs</id>
						<phase>${gmaven.compile.phase}</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<!-- test stubs aren't needed now since we are not creating groovy test 
						code for reference in java test code -->
					<!--<goal>generateTestStubs</goal> -->
					<execution>
						<id>gmaven-test-compile-stubs</id>
						<phase>${gmaven.test.compile.phase}</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- <plugin> <groupId>org.codehaus.mojo</groupId> <artifactId>license-maven-plugin</artifactId> 
				<version>1.3</version> <configuration> <verbose>false</verbose> <addSvnKeyWords>false</addSvnKeyWords> 
				</configuration> <executions> <execution> <id>first</id> <goals> <goal>update-file-header</goal> 
				</goals> <phase>process-sources</phase> <configuration> <licenseName>gpl_v3</licenseName> 
				<roots> <root>src/test</root> </roots> <excludes> <exclude>src/test/js/jquery-1.7.2.js</exclude> 
				<exclude>src/main/webapp/WEB-INF/krad-servlet.xml</exclude> <exclude>src/main/webapp/WEB-INF/web.xml</exclude> 
				<exclude>src/main/webapp/WEB-INF/tags/rice-portal/channel/*.tag</exclude> 
				</excludes> </configuration> </execution> </executions> </plugin> -->
		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											license-maven-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>
												update-file-header
											</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.gmaven
										</groupId>
										<artifactId>
											gmaven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>generateStubs</goal>
											<goal>compile</goal>
											<goal>testCompile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore></ignore>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-impex-master</artifactId>
			<version>${rice.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-web</artifactId>
			<version>${rice.version}</version>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-impl</artifactId>
			<version>${rice.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-edl-impl</artifactId>
			<version>${rice.version}</version>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-krms-impl</artifactId>
			<version>${rice.version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.18</version>
			<!-- <scope>provided</scope> -->
		</dependency>

		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-it-krad</artifactId>
			<version>${rice.version}</version>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-it-internal-tools</artifactId>
			<version>${rice.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-it-kim</artifactId>
			<version>${rice.version}</version>
			<scope>test</scope>
			<type>test-jar</type>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
			<version>2.7.7</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>2.3.20-patch2</version>
		</dependency>
		<dependency>
			<groupId>org.ow2.carol</groupId>
			<artifactId>carol</artifactId>
			<version>3.0.6</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>1.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.kuali.rice</groupId>
			<artifactId>rice-kim-ldap</artifactId>
			<version>${rice.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-openid</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- dependency to fix http://stackoverflow.com/questions/2161050/spring-3-0-unable-to-locate-spring-namespacehandler-for-xml-schema-namespace -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- <dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.version}</version>
		</dependency> -->
		<!-- end of dependency to fix http://stackoverflow.com/questions/2161050/spring-3-0-unable-to-locate-spring-namespacehandler-for-xml-schema-namespace -->
		
		<!-- to provide this dependency of spring openid explicitly -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<!-- set this explicitly so that spring security does not use the 3.0.7 release -->
		<!-- credit http://www.captaindebug.com/2013/05/spring-and-javalangnosuchfielderror.html -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-expression</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.version}</version>
		</dependency> -->
		<!-- end of dependencies to fix https://jira.springsource.org/browse/SEC-1883 -->
		<!-- dependency to avoid java.lang.ClassNotFoundException: org.cyberneko.html.HTMLTagBalancingListener -->
		<dependency>
			<groupId>net.sourceforge.nekohtml</groupId>
			<artifactId>nekohtml</artifactId>
			<version>1.9.18</version>
		</dependency>
		<!-- end dependencies for https://jira.springsource.org/browse/SEC-1883 -->
		<!-- from http://forum.springsource.org/showthread.php?87691-Petclinic-Unable-to-read-TLD-quot-META-INF-c-tld-quot&p=314641#post314641 -->
		<!-- trying to work around Failed to load or instantiate TagLibraryValidator 
			class: org.apache.taglibs.standard.tlv.JstlCoreTLV -->
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
	</dependencies>
	<repositories>
		<!-- <repository> <id>kuali</id> <name>Kuali Repository</name> <url>https://test.kuali.org/maven</url> 
			</repository> -->
		<!-- <repository> <id>central</id> <name>Maven Central</name> <url>http://repo1.maven.org/maven2</url> 
			</repository> -->
	</repositories>
</project>
